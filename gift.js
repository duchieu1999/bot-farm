const cron = require('node-cron');

// Danh s√°ch c√°c c√¢u ch√†o bu·ªïi s√°ng ng·∫´u nhi√™n
const morningGreetings = [
  "Ch√∫c bu·ªïi s√°ng vui v·∫ª! Ai mu·ªën th·ª≠ v·∫≠n may n√†o",
  "S√°ng nay th·∫≠t tuy·ªát! Ai mu·ªën nh·∫≠n qu√† kh√¥ng",
  "Ch√∫c m·ªçi ng∆∞·ªùi m·ªôt bu·ªïi s√°ng t∆∞∆°i s√°ng! Ai s·∫Ω nh·∫≠n qu√† h√¥m nay?",
  "Ch√†o bu·ªïi s√°ng nh·ªØng qu·∫©y th·ªß! N·∫Øng ƒë√£ l√™n, gi√≥ ƒë√£ th·ªïi, ai c√≤n chƒÉn ·∫•m n·ªám √™m th√¨ mau th·ª©c d·∫≠y n√†o!",
"B√πm ch√≠u b√πm ch√≠u! Bu·ªïi s√°ng h√¢n hoan ƒë√£ ƒë·∫øn r·ªìi! L·∫Øc l∆∞ n√†o c√°c chi·∫øn binh, qu·∫©y tung n√≥c nh√† th√¥i!",
"C√† ph√™ s·ªØa ƒë√°, b√°nh m√¨ n√≥ng h·ªïi! Bu·ªïi s√°ng tuy·ªát v·ªùi th·∫ø n√†y kh√¥ng qu·∫©y th√¨ qu·∫©y l√∫c n√†o?",
"T√≠ t√°ch t√≠ t√°ch, chu√¥ng b√°o th·ª©c reo vang! Nhanh ch√≥ng n√†o qu·∫©y team, ng√†y m·ªõi h·ª©a h·∫πn nhi·ªÅu ni·ªÅm vui ƒë√¢y!",
"H√¥m nay tr·ªùi xanh m√¢y tr·∫Øng, chim h√≥t l√≠u lo. Th√≠ch h·ª£p v√¥ c√πng ƒë·ªÉ qu·∫©y h·∫øt m√¨nh n√†o c√°c chi·∫øn binh!",
"ƒê√£ ƒë·∫øn gi·ªù n·∫°p nƒÉng l∆∞·ª£ng cho ng√†y m·ªõi! Qu·∫©y tung n√≥c nh√† v·ªõi nh·ªØng ly tr√† s·ªØa m√°t l·∫°nh n√†o!",
"B·ªè qua m·ªçi mu·ªôn phi·ªÅn, ch√†o ƒë√≥n ng√†y m·ªõi v·ªõi n·ª• c∆∞·ªùi r·∫°ng r·ª°! C√πng qu·∫©y l√™n n√†o c√°c qu·∫©y th·ªß ∆°i!",
"S√°ng nay ai d·∫≠y s·ªõm nh·∫•t? Nh·∫≠n ngay ph·∫ßn qu√† ƒë·∫∑c bi·ªát t·ª´ qu·∫©y team nh√©!",
"C√πng nhau qu·∫©y h·∫øt m√¨nh, bi·∫øn ng√†y m·ªõi th√†nh ng√†y tuy·ªát v·ªùi nh·∫•t n√†o!",
"L·∫Øc l∆∞ theo ti·∫øng nh·∫°c, phi√™u theo ƒëi·ªáu nh·∫£y. Bu·ªïi s√°ng qu·∫©y hƒÉng say, c·∫£ ng√†y vui v·∫ª!",
"B√°nh m√¨ n√≥ng h·ªïi, gi√≤n tan ai mua kh√¥ng? Nhanh tay l√™n n√†o, qu·∫©y team ƒë·ª£i h·ª•t h·∫´ng l·∫Øm ƒë√¢y!",
"C√† ph√™ s·ªØa ƒë√°, tr√† ƒë√° m√°t l·∫°nh ai g·ªçi? S√°ng nay qu·∫©y hƒÉng say n√†o c√°c chi·∫øn binh!",
"M·ªü TikTok l√™n n√†o, bao nhi√™u clip h√†i h∆∞·ªõc ƒëang ch·ªù ch√∫ng ta qu·∫©y t∆∞ng b·ª´ng ƒë√¢y!",
"S√°ng d·∫≠y ch√°n c∆°m r·ªìi th√¨ sao? B√∫n ch·∫£, ph·ªü b√≤, b√°nh m√¨ k·∫πp th·ªãt, ai th√®m g√¨ qu·∫©y team g·ªçi ship ngay!",
"Tr·ªùi ∆°i, tr√∫ng th∆∞·ªüng r·ªìi! H√¥m nay ai may m·∫Øn nh·∫•t nh·ªâ? qu·∫©y team l√¨ x√¨ cho ng∆∞·ªùi may m·∫Øn n√†o!",
"S√°ng nay ai d·∫≠y s·ªõm nh·∫•t? Nh·∫≠n ngay ph·∫ßn qu√† b√≠ m·∫≠t t·ª´ qu·∫©y team nh√©!",
"Ch√†o ng√†y m·ªõi, C√πng nhau qu·∫©y n√†o! H√¥m nay qu·∫©y team quy·∫øt t√¢m ph√° ƒë·∫£o m·ªçi th·ª≠ th√°ch!",
"Team ∆°i s√°ng ƒëi h·ªçc c·∫©n th·∫≠n k·∫ªo ƒë·ª•ng ƒë·ªô crush ƒëi h·ªçc chung nh√©! Mau qu·∫©y cho ƒë·∫πp trai xinh g√°i n√†o!",
"Ch√†o bu·ªïi s√°ng, l√°t ƒëi ƒë√¢u ƒë·ª´ng qu√™n ƒëeo kh·∫©u trang khi ra ngo√†i nh√©! Qu·∫©y team chung tay b·∫£o v·ªá s·ª©c kh·ªèe c·ªông ƒë·ªìng!",
"S√°ng nay ai qu·∫©y hƒÉng say nh·∫•t? T·ªëi nay ƒë∆∞·ª£c qu·∫©y team ƒë√£i kem nh√©!",
"S√°ng nay tr·ªùi ƒë·∫πp th·∫ø n√†y, kh√¥ng qu·∫©y th√¨ ph√≠ c·∫£ m·ªôt ng√†y! Ra ngo√†i h√≠t th·ªü kh√¥ng kh√≠ n√†o!",
"Nh·∫°c n√†o, playlist n√†o? C√πng nhau qu·∫©y tung n√≥c nh√† v·ªõi nh·ªØng giai ƒëi·ªáu s√¥i ƒë·ªông n√†o!",
"Ai c√≤n ng·ªß n∆∞·ªõng? D·∫≠y mau qu·∫©y n√†o! H√¥m nay c√≥ bao nhi√™u ni·ªÅm vui ƒëang ch·ªù ƒë√≥n!",
"Bu·ªïi s√°ng vui v·∫ª, s√°ng nay mu·ªën qu·∫©y ki·ªÉu g√¨? ƒêi ph∆∞·ª£t, ƒëi cafe, hay t·ª• t·∫≠p ch∆°i game? Chia s·∫ª v·ªõi c·∫£ nh√≥m n√†o!",
"Ch√†o ng√†y m·ªõi, c√πng nhau qu·∫©y h·∫øt m√¨nh, x·∫£ stress sau nh·ªØng gi·ªù h·ªçc t·∫≠p v√† l√†m vi·ªác cƒÉng th·∫≥ng!",
"Ch√∫c m·ªôt bu·ªïi s√°ng qu·∫©y vui v·∫ª, tinh th·∫ßn s·∫Ω ph·∫•n ch·∫•n, h·ªçc t·∫≠p v√† l√†m vi·ªác c≈©ng hi·ªáu qu·∫£ h∆°n!",
];

// ƒê·∫∑t l·∫°i tr·∫°ng th√°i h√†ng ng√†y
function resetDailyGiftStatus(DailyGiftStatus) {
  cron.schedule(
    '28 6 * * *',
    async () => {
      await DailyGiftStatus.updateMany(
        {}, 
        { $set: { dailyGiftClaims: [], giftWonToday: false } }
      );
    },
    {
      timezone: 'Asia/Ho_Chi_Minh',
    }
  );
}

// G·ª≠i tin nh·∫Øn ch√†o bu·ªïi s√°ng
function sendMorningMessage(bot) {
  const chatId = -1002103270166; // ID nh√≥m c·∫ßn g·ª≠i tin nh·∫Øn

  cron.schedule(
    '30 6 * * *',
    () => {
      const inlineKeyboard = {
        inline_keyboard: [
          [
            {
              text: 'Nh·∫≠n l·ªôc may m·∫Øn h√¥m nay',
              callback_data: 'lucky_gift',
            },
          ],
        ],
      };

      const morningGreeting = morningGreetings[
        Math.floor(Math.random() * morningGreetings.length)
      ];

      bot.sendMessage(chatId, morningGreeting, {
        reply_markup: inlineKeyboard,
      });
    },
    {
      timezone: 'Asia/Ho_Chi_Minh',
    }
  );
}

// X·ª≠ l√Ω khi ng∆∞·ªùi d√πng nh·∫≠n ph·∫ßn qu√†
async function handleGiftClaim(bot, callbackQuery, BangCong2, DailyGiftStatus) {
  const chatId = callbackQuery.message.chat.id;
  const userId = callbackQuery.from.id;
  const fullName = `${callbackQuery.from.first_name} ${callbackQuery.from.last_name || ''}`;

  const today = new Date().toLocaleDateString();

  // Truy xu·∫•t tr·∫°ng th√°i t·ª´ MongoDB
  let dailyStatus = await DailyGiftStatus.findOne({ date: today });

  if (!dailyStatus) {
    dailyStatus = await DailyGiftStatus.create({
      date: today,
      dailyGiftClaims: [],
      giftWonToday: false,
    });
  }

  if (dailyStatus.dailyGiftClaims.includes(userId)) {
    bot.answerCallbackQuery(callbackQuery.id, {
      text: "B·∫°n ƒë√£ th·ª≠ nh·∫≠n l·ªôc h√¥m nay r·ªìi!",
      show_alert: true,
    });
    return;
  }

  if (dailyStatus.giftWonToday) {
    bot.answerCallbackQuery(callbackQuery.id, {
      text: "ƒê√£ c√≥ ng∆∞·ªùi nh·∫≠n ƒë∆∞·ª£c l·ªôc h√¥m nay r·ªìi, h√£y th·ª≠ v·∫≠n may v√†o ng√†y mai.",
      show_alert: true,
    });
    return;
  }

  // C·∫≠p nh·∫≠t tr·∫°ng th√°i trong b·ªô nh·ªõ v√† MongoDB
  dailyStatus.dailyGiftClaims.push(userId);

  const isWinner = Math.random() < 0.20;

  if (isWinner) {
    dailyStatus.giftWonToday = true;

    // T·∫°o s·ªë ng·∫´u nhi√™n t·ª´ 400 ƒë·∫øn 1000
const randomAmount = 400 + Math.random() * (1000 - 400);

// L√†m tr√≤n ƒë·∫øn h√†ng ch·ª•c
const prize = Math.round(randomAmount / 10) * 10;


    bot.answerCallbackQuery(callbackQuery.id, {
      text: `Ch√∫c m·ª´ng! B·∫°n ƒë√£ tr√∫ng ${prize}vnƒë l·ªôc üéâ`,
      show_alert: true,
    });

    await BangCong2.create({
      userId,
      groupId: chatId,
      date: today,
      ten: fullName,
      giftWon: true,
      prizeAmount: prize,
    });

    await dailyStatus.save(); // L∆∞u tr·∫°ng th√°i c·∫≠p nh·∫≠t

    bot.sendMessage(chatId, `Ch√∫c m·ª´ng ${fullName} ƒë√£ nh·∫≠n ƒë∆∞·ª£c l·ªôc may m·∫Øn h√¥m nay v·ªõi ${prize}vnƒë v√† ƒë∆∞·ª£c c·ªông v√†o b·∫£ng c√¥ng!`);
  } else {
    bot.answerCallbackQuery(callbackQuery.id, {
      text: "R·∫•t ti·∫øc! B·∫°n kh√¥ng tr√∫ng l·ªôc h√¥m nay, h√£y th·ª≠ l·∫°i v√†o ng√†y mai.",
      show_alert: true,
    });
  }

  await dailyStatus.save(); // ƒê·∫£m b·∫£o tr·∫°ng th√°i ƒë∆∞·ª£c l∆∞u
}

module.exports = {
  resetDailyGiftStatus,
  sendMorningMessage,
  handleGiftClaim,
};
